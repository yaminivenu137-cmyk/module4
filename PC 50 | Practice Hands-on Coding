import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(MaterialApp(debugShowCheckedModeBanner: false, home: EmailAuthApp()));
}

class EmailAuthApp extends StatefulWidget {
  @override
  _EmailAuthAppState createState() => _EmailAuthAppState();
}

class _EmailAuthAppState extends State<EmailAuthApp> {
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();
  bool isLogin = true;

  Future<void> _authenticate() async {
    try {
      if (isLogin) {
        await FirebaseAuth.instance.signInWithEmailAndPassword(
          email: _emailController.text.trim(),
          password: _passwordController.text.trim(),
        );
      } else {
        await FirebaseAuth.instance.createUserWithEmailAndPassword(
          email: _emailController.text.trim(),
          password: _passwordController.text.trim(),
        );
      }
    } catch (e) {
      ScaffoldMessenger.of(context)
          .showSnackBar(SnackBar(content: Text("Error: $e")));
    }
  }

  @override
  Widget build(BuildContext context) {
    return StreamBuilder<User?>(
      stream: FirebaseAuth.instance.authStateChanges(),
      builder: (context, snapshot) {
        // âœ… User logged in
        if (snapshot.hasData) {
          return Scaffold(
            appBar: AppBar(
              title: Text("Welcome"),
              actions: [
                IconButton(
                  icon: Icon(Icons.logout),
                  onPressed: () => FirebaseAuth.instance.signOut(),
                ),
              ],
            ),
            body: Center(
              child: Text("Logged in as ${snapshot.data!.email}",
                  style: TextStyle(fontSize: 18)),
            ),
          );
        }

        // ðŸ”‘ Login / Signup Page
        return Scaffold(
          appBar: AppBar(title: Text(isLogin ? "Login" : "Sign Up")),
          body: Padding(
            padding: const EdgeInsets.all(16.0),
            child: Column(
              children: [
                TextField(
                  controller: _emailController,
                  decoration: InputDecoration(labelText: "Email"),
                ),
                SizedBox(height: 10),
                TextField(
                  controller: _passwordController,
                  decoration: InputDecoration(labelText: "Password"),
                  obscureText: true,
                ),
                SizedBox(height: 20),
                ElevatedButton(
                  onPressed: _authenticate,
                  child: Text(isLogin ? "Login" : "Sign Up"),
                ),
                TextButton(
                  onPressed: () {
                    setState(() {
                      isLogin = !isLogin;
                    });
                  },
                  child: Text(isLogin
                      ? "Don't have an account? Sign Up"
                      : "Already have an account? Login"),
                )
              ],
            ),
          ),
        );
      },
    );
  }
}
